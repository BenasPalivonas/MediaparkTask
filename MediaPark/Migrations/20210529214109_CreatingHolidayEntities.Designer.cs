// <auto-generated />
using MediaPark.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MediaPark.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210529214109_CreatingHolidayEntities")]
    partial class CreatingHolidayEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MediaPark.Entities.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("MediaPark.Entities.Country_HolidayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HolidayTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("HolidayTypeId");

                    b.ToTable("Country_HolidayTypes");
                });

            modelBuilder.Entity("MediaPark.Entities.FromDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode")
                        .IsUnique()
                        .HasFilter("[CountryCode] IS NOT NULL");

                    b.ToTable("FromDates");
                });

            modelBuilder.Entity("MediaPark.Entities.HolidayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolidayTypes");
                });

            modelBuilder.Entity("MediaPark.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("MediaPark.Entities.ToDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode")
                        .IsUnique()
                        .HasFilter("[CountryCode] IS NOT NULL");

                    b.ToTable("ToDates");
                });

            modelBuilder.Entity("MediaPark.Entities.Country_HolidayType", b =>
                {
                    b.HasOne("MediaPark.Entities.Country", "Country")
                        .WithMany("Country_HolidayTypes")
                        .HasForeignKey("CountryCode");

                    b.HasOne("MediaPark.Entities.HolidayType", "HolidayType")
                        .WithMany("Country_HolidayTypes")
                        .HasForeignKey("HolidayTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("HolidayType");
                });

            modelBuilder.Entity("MediaPark.Entities.FromDate", b =>
                {
                    b.HasOne("MediaPark.Entities.Country", "Country")
                        .WithOne("FromDate")
                        .HasForeignKey("MediaPark.Entities.FromDate", "CountryCode");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MediaPark.Entities.Region", b =>
                {
                    b.HasOne("MediaPark.Entities.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryCode");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MediaPark.Entities.ToDate", b =>
                {
                    b.HasOne("MediaPark.Entities.Country", "Country")
                        .WithOne("ToDate")
                        .HasForeignKey("MediaPark.Entities.ToDate", "CountryCode");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MediaPark.Entities.Country", b =>
                {
                    b.Navigation("Country_HolidayTypes");

                    b.Navigation("FromDate");

                    b.Navigation("Regions");

                    b.Navigation("ToDate");
                });

            modelBuilder.Entity("MediaPark.Entities.HolidayType", b =>
                {
                    b.Navigation("Country_HolidayTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
